(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{321:function(_,v,t){"use strict";t.r(v);var e=t(0),l=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"秒杀系统架构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#秒杀系统架构设计"}},[_._v("#")]),_._v(" 秒杀系统架构设计")]),_._v(" "),t("p",[_._v("秒杀系统涉及高性能、高一致性、高可用三个问题。")]),_._v(" "),t("p",[_._v("先细化场景，秒杀有三种扣库存的方式：")]),_._v(" "),t("ul",[t("li",[_._v("下单时扣库存")]),_._v(" "),t("li",[_._v("付款时扣库存")]),_._v(" "),t("li",[_._v("下单时预扣库存，一定时间后如果还没付款则加回库存")])]),_._v(" "),t("p",[_._v("这里考虑下单扣库存这种最简单的情况，如果用户下单后却不付款，那么可以通过其他机制来规避，比如每个用户只能买一件，比如大数据分析某些用户经常下单不付款就不扣库存。")]),_._v(" "),t("p",[_._v("数据表有订单表和库存表，有可能订单生成成功，减库存却失败，最简单的就是数据库的事务，确保这两个表的操作是原子的。")]),_._v(" "),t("p",[_._v("但是mysql的tps可能只有几百，面对几万甚至更高的流量处理不了，考虑限制总的访问数，比如商品库存是1000，那么限制对该商品的下单数为1200，就是统计请求的数量，这个可以用redis来做。")]),_._v(" "),t("p",[_._v("如果有多个商品或者一个商品数很大，总之就是参与秒杀的商品总数很大，最终进来的请求还是很多，那么可以用消息队列把请求存起来，后面再做处理。这时可能看到的是下单成功，但付款时多余的请求会失败，这就是"),t("strong",[_._v("最终一致性")]),_._v("。")]),_._v(" "),t("p",[_._v("在入口处减小流量，比如秒杀开始时让用户答题、抢优惠券，技术上做限流（用户刷不出页面，等刷出来时可能已经没货了）。")]),_._v(" "),t("p",[_._v("库存超卖实际上分两种:")]),_._v(" "),t("ul",[t("li",[_._v("允许超卖，可以补货")]),_._v(" "),t("li",[_._v("不允许超卖，严格控制库存不能为负")])]),_._v(" "),t("p",[_._v("限制库存超卖方法有：")]),_._v(" "),t("ul",[t("li",[_._v("设置字段为uint")]),_._v(" "),t("li",[_._v("使用事务，一次查数量，一次做减法，不推荐")]),_._v(" "),t("li",[_._v("使用case when语句")])]),_._v(" "),t("p",[_._v("参考文献："),t("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/93119691",target:"_blank",rel:"noopener noreferrer"}},[_._v("一个秒杀系统的设计思考"),t("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=l.exports}}]);