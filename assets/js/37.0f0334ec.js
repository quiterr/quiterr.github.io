(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{322:function(e,a,t){"use strict";t.r(a);var s=t(0),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"nginx笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx笔记"}},[e._v("#")]),e._v(" Nginx笔记")]),e._v(" "),t("p",[e._v("2019.3.26")]),e._v(" "),t("h2",{attrs:{id:"_1、nginx环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、nginx环境搭建"}},[e._v("#")]),e._v(" 1、nginx环境搭建")]),e._v(" "),t("p",[t("strong",[e._v("linux安装")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("yum install nginx\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx -v\n")])])]),t("p",[t("strong",[e._v("windows安装")])]),e._v(" "),t("p",[e._v("下载zip包解压即可")]),e._v(" "),t("p",[t("strong",[e._v("配置文件")])]),e._v(" "),t("p",[e._v("以下讲的是CentOS7.4环境，windows下图形界面操作即可。")]),e._v(" "),t("p",[e._v("使用如下命令查看安装位置")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("rpm -ql nginx\n")])])]),t("p",[e._v("其中"),t("code",[e._v("/etc/nginx/nginx.conf")]),e._v("是核心配置文件。")]),e._v(" "),t("p",[t("strong",[e._v("启动、停止、重启")])]),e._v(" "),t("p",[e._v("以下讲的是CentOS7.4环境。")]),e._v(" "),t("p",[e._v("默认情况下，Nginx不会自动启动。")]),e._v(" "),t("p",[t("strong",[e._v("nginx直接启动")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx\n")])])]),t("p",[t("strong",[e._v("systemctl命令启动")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl start nginx.service\n")])])]),t("p",[t("strong",[e._v("停止Nginx服务的四种方法")])]),e._v(" "),t("p",[e._v("强制关闭")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx  -s stop\n")])])]),t("p",[e._v("安全关闭")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx -s quit\n")])])]),t("p",[e._v("systemctl 停止")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl stop nginx.service\n")])])]),t("p",[e._v("killall")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("killall nginx\n")])])]),t("p",[t("strong",[e._v("重启Nginx服务")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("systemctl restart nginx.service\n")])])]),t("p",[t("strong",[e._v("重新载入配置文件")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("nginx -s reload\n")])])]),t("p",[t("strong",[e._v("注意")]),e._v("：开发的时候可以在IDEA中配置nginx启动项")]),e._v(" "),t("h2",{attrs:{id:"_2、location配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、location配置"}},[e._v("#")]),e._v(" 2、location配置")]),e._v(" "),t("p",[e._v("context：http.server")]),e._v(" "),t("p",[t("strong",[e._v("语法规则")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location [ = | ~ | ~* | ^~ ] uri { ... }\nlocation @name { ... }\n")])])]),t("p",[e._v("很简单，一个"),t("code",[e._v("location")]),e._v("关键字，后面跟着可选的修饰符，后面是要匹配的字符，花括号中是要执行的操作。")]),e._v(" "),t("p",[t("strong",[e._v("修饰符")])]),e._v(" "),t("ul",[t("li",[t("code",[e._v("=")]),e._v(" 表示精确匹配。只有请求的url路径与后面的字符串完全相等时，才会命中。")]),e._v(" "),t("li",[t("code",[e._v("~")]),e._v(" 表示该规则是使用正则定义的，区分大小写。")]),e._v(" "),t("li",[t("code",[e._v("~*")]),e._v(" 表示该规则是使用正则定义的，不区分大小写。")]),e._v(" "),t("li",[t("code",[e._v("^~")]),e._v(" 表示如果该符号后面的字符是最佳匹配，采用该规则，不再进行后续的查找。")])]),e._v(" "),t("p",[t("strong",[e._v("匹配过程")])]),e._v(" "),t("p",[e._v("请求的url预处理。例如，对"),t("code",[e._v("%xx")]),e._v("等字符进行解码，去除url中多个相连的"),t("code",[e._v("/")]),e._v("，解析url中的"),t("code",[e._v(".")]),e._v("，"),t("code",[e._v("..")]),e._v("等。")]),e._v(" "),t("p",[e._v("location有两种表示形式，一种是使用前缀字符，一种是使用正则。如果是正则的话，前面有"),t("code",[e._v("~")]),e._v("或"),t("code",[e._v("~*")]),e._v("修饰符。")]),e._v(" "),t("p",[e._v("具体的匹配过程如下：")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("首先检查使用前缀字符定义的location，选择最长匹配的项并记录下来。")])]),e._v(" "),t("li",[t("p",[e._v("如果找到了精确匹配的location，也就是使用了"),t("code",[e._v("=")]),e._v("修饰符的location，结束查找，使用它的配置。")])]),e._v(" "),t("li",[t("p",[e._v("然后按顺序查找使用正则定义的location，如果匹配则停止查找，使用它定义的配置。")])]),e._v(" "),t("li",[t("p",[e._v("如果没有匹配的正则location，则使用前面记录的最长匹配前缀字符location。")])])]),e._v(" "),t("p",[e._v("基于以上的匹配过程，我们可以得到以下两点启示：")]),e._v(" "),t("ol",[t("li",[t("strong",[e._v("使用正则定义的location在配置文件中出现的顺序很重要")]),e._v("。因为找到第一个匹配的正则后，查找就停止了，后面定义的正则就是再匹配也没有机会了。")]),e._v(" "),t("li",[t("strong",[e._v("使用精确匹配可以提高查找的速度")]),e._v("。例如经常请求"),t("code",[e._v("/")]),e._v("的话，可以使用"),t("code",[e._v("=")]),e._v("来定义location。")])]),e._v(" "),t("p",[t("strong",[e._v("示例")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /user/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n")])])]),t("p",[e._v("请求"),t("code",[e._v("/")]),e._v("精准匹配A，不再往下查找。")]),e._v(" "),t("p",[e._v("请求"),t("code",[e._v("/index.html")]),e._v("匹配B。首先查找匹配的前缀字符，找到最长匹配是配置B，接着又按照顺序查找匹配的正则。结果没有找到，因此使用先前标记的最长匹配，即配置B。")]),e._v(" "),t("p",[e._v("请求"),t("code",[e._v("/user/index.html")]),e._v("匹配C。首先找到最长匹配C，由于后面没有匹配的正则，所以使用最长匹配C。\n请求"),t("code",[e._v("/user/1.jpg")]),e._v("匹配E。首先进行前缀字符的查找，找到最长匹配项C，继续进行正则查找，找到匹配项E。因此使用E。")]),e._v(" "),t("p",[e._v("请求"),t("code",[e._v("/images/1.jpg")]),e._v("匹配D。首先进行前缀字符的查找，找到最长匹配D。但是，特殊的是它使用了"),t("code",[e._v("^~")]),e._v("修饰符，不再进行接下来的正则的匹配查找，因此使用D。这里，如果没有前面的修饰符，其实最终的匹配是E。大家可以想一想为什么。")]),e._v(" "),t("p",[e._v("请求"),t("code",[e._v("/documents/about.html")]),e._v("匹配B。因为B表示任何以"),t("code",[e._v("/")]),e._v("开头的URL都匹配。在上面的配置中，只有B能满足，所以匹配B。")]),e._v(" "),t("p",[t("strong",[e._v("location @name的用法")])]),e._v(" "),t("p",[e._v("@用来定义一个命名location。主要用于内部重定向，不能用来处理正常的请求。其用法如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    try_files $uri $uri/ @custom\n}\nlocation @custom {\n    # ...do something\n}\n")])])]),t("p",[t("strong",[e._v("URL尾部的/是否需要")])]),e._v(" "),t("p",[e._v("关于URL尾部的"),t("code",[e._v("/")]),e._v("有三点需要注意。第一点与location配置有关，其他两点无关。")]),e._v(" "),t("ol",[t("li",[e._v("location中的字符有没有"),t("code",[e._v("/")]),e._v("都没有影响。也就是说"),t("code",[e._v("/user/")]),e._v("和"),t("code",[e._v("/user")]),e._v("是一样的。")]),e._v(" "),t("li",[e._v("如果URL结构是"),t("code",[e._v("https://domain.com/")]),e._v("的形式，尾部有没有"),t("code",[e._v("/")]),e._v("都不会造成重定向。因为浏览器在发起请求的时候，默认加上了"),t("code",[e._v("/")]),e._v("。虽然很多浏览器在地址栏里也不会显示"),t("code",[e._v("/")]),e._v("。这一点，可以访问"),t("a",{attrs:{href:"https://www.baidu.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("baidu"),t("OutboundLink")],1),e._v("验证一下。")]),e._v(" "),t("li",[e._v("如果URL的结构是"),t("code",[e._v("https://domain.com/some-dir/")]),e._v("。尾部如果缺少"),t("code",[e._v("/")]),e._v("将导致重定向。因为根据约定，URL尾部的"),t("code",[e._v("/")]),e._v("表示目录，没有"),t("code",[e._v("/")]),e._v("表示文件。所以访问"),t("code",[e._v("/some-dir/")]),e._v("时，服务器会自动去该目录下找对应的默认文件。如果访问"),t("code",[e._v("/some-dir")]),e._v("的话，服务器会先去找"),t("code",[e._v("some-dir")]),e._v("文件，找不到的话会将"),t("code",[e._v("some-dir")]),e._v("当成目录，重定向到"),t("code",[e._v("/some-dir/")]),e._v("，去该目录下找默认文件。可以去测试一下你的网站是不是这样的。")])]),e._v(" "),t("p",[t("strong",[e._v("权限控制")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n        deny   123.9.51.42;\n        allow  45.76.202.231;\n    }\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location ~\\.php$ {\n        deny all;\n    }\n")])])]),t("h2",{attrs:{id:"_3、upstream配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、upstream配置"}},[e._v("#")]),e._v(" 3、upstream配置")]),e._v(" "),t("p",[t("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_upstream_module.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方文档"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("context: http")]),e._v(" "),t("p",[t("strong",[e._v("语法规则")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream name { ... }\n")])])]),t("p",[e._v("这个模块是用来定义一组servers，随后可以被其他指令引用")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass, memcached_pass, and grpc_pass\n")])])]),t("p",[t("strong",[e._v("例子")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;\n\n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n}\n\nserver {\n    location / {\n        proxy_pass http://backend;\n    }\n}\n")])])]),t("p",[e._v("默认是基于weight的轮询，每7个请求会有5个到达backend1。")]),e._v(" "),t("p",[t("strong",[e._v("server的语法规则")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server address [parameters];\n")])])]),t("p",[e._v("可以不指定端口，默认是80。")]),e._v(" "),t("p",[e._v("可用的"),t("code",[e._v("parameters")])]),e._v(" "),t("p",[t("code",[e._v("weight")]),e._v(" 轮询时的权重，数值越大权重越大，默认为1")]),e._v(" "),t("p",[t("code",[e._v("max_fails")]),e._v(" 允许请求失败的次数，默认为1。当超过最大次数时，返回proxy_next_upstream 模块定义的错误")]),e._v(" "),t("p",[t("code",[e._v("fail_timeout")]),e._v(" 达到max_fails指定的失败次数后，暂停的时间，默认为10秒")]),e._v(" "),t("p",[t("code",[e._v("backup")]),e._v(" 备用服务器, 其它所有的机器down或者忙的时候，才会请求backup机器")]),e._v(" "),t("p",[t("code",[e._v("down")]),e._v(" 表示当前的server暂时不参与负载")]),e._v(" "),t("p",[e._v("注意：当只有一个server时max_fails不生效。")]),e._v(" "),t("p",[e._v("还有一些参数看不明白含义："),t("code",[e._v("resolve")]),e._v("、"),t("code",[e._v("route")]),e._v("="),t("code",[e._v("*string*")]),e._v("、"),t("code",[e._v("service")]),e._v("="),t("code",[e._v("*name*")]),e._v("、"),t("code",[e._v("slow_start")]),e._v("="),t("code",[e._v("*time*")]),e._v("、"),t("code",[e._v("drain")])]),e._v(" "),t("p",[t("strong",[e._v("负载均衡配置")])]),e._v(" "),t("p",[e._v("ip_hash")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream backend{\n    ip_hash;\n    server 192.168.1.10:8080;\n    server 192.168.1.11:8080;\n}\n")])])]),t("p",[e._v("fair（第三方插件）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream backend{\n    fair;\n    server 192.168.1.10:8080;\n    server 192.168.1.11:8080;\n}\n")])])]),t("p",[e._v("url_hash（第三方插件）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream resinserver{\n    server 192.168.1.10:8080;\n    server 192.168.1.11:8080;\n    hash $request_uri;\n    hash_method crc32;\n}\n")])])]),t("h2",{attrs:{id:"_4、nginx设置虚拟主机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、nginx设置虚拟主机"}},[e._v("#")]),e._v(" 4、Nginx设置虚拟主机")]),e._v(" "),t("p",[e._v("虚拟主机是指在一台物理主机服务器上划分出多个磁盘空间，每个磁盘空间都是一个虚拟主机，都可以对外提供Web服务。")]),e._v(" "),t("p",[t("strong",[e._v("基于端口的虚拟主机")])]),e._v(" "),t("p",[e._v("在/etc/nginx/conf.d/目录下新建一个配置文件test.conf，默认这个目录下的conf文件都会被include")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server{\n        listen 8001;\n        server_name localhost;\n        root /usr/share/nginx/html/html8001;\n        index index.html;\n}\n")])])]),t("p",[e._v("在"),t("code",[e._v("usr/share/nginx/html/html8001/")]),e._v("目录下新建index.html文件（先要建一个html8001目录）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<h1>welcome port 8001</h1>\n")])])]),t("p",[e._v("reload配置或重启nginx")]),e._v(" "),t("p",[e._v("打开"),t("code",[e._v("http://localhost:8001/")]),e._v("和"),t("code",[e._v("http://localhost:80/")]),e._v("就能看到不同的页面。")]),e._v(" "),t("p",[t("strong",[e._v("基于IP的虚拟主机")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server{\n        listen 80;\n        server_name 112.74.164.244;\n        root /usr/share/nginx/html/html8001;\n        index index.html;\n}\n")])])]),t("p",[e._v("如果有多个IP就可以这样配置。")]),e._v(" "),t("p",[t("strong",[e._v("基于域名的虚拟主机")])]),e._v(" "),t("p",[e._v("先得有两个域名，并且都指向nginx所在的服务器")]),e._v(" "),t("p",[e._v("修改nginx.conf")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n    listen       80;\n    server_name  site1.yourDomain.com;\n")])])]),t("p",[e._v("修改test.conf")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server{\n        listen 80;\n        server_name site2.yourDomain.com;\n        root /usr/share/nginx/html/html8001;\n        index index.html;\n}\n")])])]),t("h2",{attrs:{id:"_5、反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、反向代理"}},[e._v("#")]),e._v(" 5、反向代理")]),e._v(" "),t("p",[e._v("基本用法")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server{\n        listen 80;\n        server_name site2.yourDomain.com;\n        location / {\n               proxy_pass http://yourDomain.com;\n        }\n}\n")])])]),t("p",[e._v("反向代理还有些常用的指令：")]),e._v(" "),t("ul",[t("li",[e._v("proxy_set_header :在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息。")]),e._v(" "),t("li",[e._v("proxy_connect_timeout:配置Nginx与后端代理服务器尝试建立连接的超时时间。")]),e._v(" "),t("li",[e._v("proxy_read_timeout : 配置Nginx向后端服务器组发出read请求后，等待相应的超时时间。")]),e._v(" "),t("li",[e._v("proxy_send_timeout：配置Nginx向后端服务器组发出write请求后，等待相应的超时时间。")]),e._v(" "),t("li",[e._v("proxy_redirect :用于修改后端服务器返回的响应头中的Location和Refresh。")])]),e._v(" "),t("h2",{attrs:{id:"_6、适配pc或移动设备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、适配pc或移动设备"}},[e._v("#")]),e._v(" 6、适配PC或移动设备")]),e._v(" "),t("p",[e._v("现在很多网站都有PC端和H5站点，根据客户设备的不同，显示出体验更好的页面。虽然有响应式网站设计的方案，但常见的淘宝、京东等这些大型网站都没有采用，而是分开制作站点。")]),e._v(" "),t("p",[e._v("在/usr/share/nginx/目录下新建两个文件夹，分别为：pc和mobile目录")]),e._v(" "),t("p",[e._v("在pc和miblic目录下，新建两个index.html文件")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<h1>I am pc!</h1>\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("<h1>I am mobile!</h1>\n")])])]),t("p",[e._v("修改test.conf")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server{\n     listen 8001;\n     server_name localhost;\n     location / {\n      root /usr/share/nginx/pc;\n      if ($http_user_agent ~* '(Android|webOS|iPhone|iPod|BlackBerry)') {\n         root /usr/share/nginx/mobile;\n      }\n      index index.html;\n     }\n}\n")])])]),t("h2",{attrs:{id:"_7、gzip压缩配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、gzip压缩配置"}},[e._v("#")]),e._v(" 7、Gzip压缩配置")]),e._v(" "),t("p",[e._v("gzip网页压缩的实现需要浏览器和服务器两边的支持。")]),e._v(" "),t("p",[e._v("当浏览器支持gzip压缩时，会在请求消息中包含"),t("code",[e._v("Accept-Encoding:gzip")]),e._v(",这样Nginx就会向浏览器发送听过gzip后的内容，同时在相应信息头中加入"),t("code",[e._v("Content-Encoding:gzip")])]),e._v(" "),t("p",[e._v("Nginx提供了专门的gzip模块，并且模块中的指令非常丰富。")]),e._v(" "),t("ul",[t("li",[e._v("gzip : 该指令用于开启或 关闭gzip模块。")]),e._v(" "),t("li",[e._v("gzip_buffers : 设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。")]),e._v(" "),t("li",[e._v("gzip_comp_level : gzip压缩比，压缩级别是1-9，1的压缩级别最低，9的压缩级别最高。压缩级别越高压缩率越大，压缩时间越长。")]),e._v(" "),t("li",[e._v("gzip_disable : 可以通过该指令对一些特定的User-Agent不使用压缩功能。")]),e._v(" "),t("li",[e._v("gzip_min_length:设置允许压缩的页面最小字节数，页面字节数从相应消息头的Content-length中进行获取。")]),e._v(" "),t("li",[e._v("gzip_http_version：识别HTTP协议版本，其值可以是1.1.或1.0.")]),e._v(" "),t("li",[e._v("gzip_proxied : 用于设置启用或禁用从代理服务器上收到相应内容gzip压缩。")]),e._v(" "),t("li",[e._v("gzip_vary : 用于在响应消息头中添加Vary：Accept-Encoding,使代理服务器根据请求头中的Accept-Encoding识别是否启用gzip压缩。")])]),e._v(" "),t("p",[e._v("最简单的例子")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("http {\n   .....\n    gzip on;\n    gzip_types text/plain application/javascript text/css;\n   .....\n}\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);