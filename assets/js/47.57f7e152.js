(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{307:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"netty源码学习-3种io、reactor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netty源码学习-3种io、reactor"}},[t._v("#")]),t._v(" netty源码学习-3种IO、Reactor")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#netty对三种io的支持"}},[t._v("netty对三种IO的支持")])]),s("li",[s("a",{attrs:{href:"#netty对reactor的支持"}},[t._v("netty对Reactor的支持")])])])]),s("p"),t._v(" "),s("p",[t._v("3种IO指BIO,NIO,AIO，Reactor是一种请求处理的模式并且也有三种实现，网上讲这些的很多，我收藏的"),s("a",{attrs:{href:"http://www.jasongj.com/java/nio_reactor/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jasongj的博客"),s("OutboundLink")],1),t._v("就讲得非常好，这里不再重复介绍了。我们一般直接用netty的NIO和主从Reactor就行了。")]),t._v(" "),s("h2",{attrs:{id:"netty对三种io的支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netty对三种io的支持"}},[t._v("#")]),t._v(" netty对三种IO的支持")]),t._v(" "),s("p",[t._v("还是看io.netty.example包下的"),s("code",[t._v("EchoServer")]),t._v("，其中有两行代码：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("netty中group的含义就是jdk中的pool，EventLoopGroup就是处理事件的线程池。")])]),t._v(" "),s("p",[t._v("很明显这就是NIO的用法了，那在netty中怎么用BIO、AIO呢？事实上在netty里和BIO对应的是OIO(old IO)。而AIO在netty中曾经有过对应的实现，后来删除了，原因是linux系统对AIO的支持不够好。")]),t._v(" "),s("p",[t._v("OIO的用法如下:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("不过OIO相关的实现类都已经被标记为"),s("code",[t._v("@Deprecated")]),t._v("，并不推荐使用了。")]),t._v(" "),s("p",[t._v("下表是netty对三种IO的支持情况：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("BIO/OIO （已废弃）")]),t._v(" "),s("th",[t._v("Common NIO")]),t._v(" "),s("th",[t._v("Linux NIO")]),t._v(" "),s("th",[t._v("macOS/BSD NIO")]),t._v(" "),s("th",[t._v("AIO（已删除）")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("s",[t._v("OioEventLoopGroup")])]),t._v(" "),s("td",[t._v("NioEventLoopGroup")]),t._v(" "),s("td",[t._v("EpollEventLoopGroup")]),t._v(" "),s("td",[t._v("KqueueEventLoopGroup")]),t._v(" "),s("td",[s("s",[t._v("AioEventLoopGroup")])])])])]),t._v(" "),s("h2",{attrs:{id:"netty对reactor的支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netty对reactor的支持"}},[t._v("#")]),t._v(" netty对Reactor的支持")]),t._v(" "),s("p",[t._v("经典Reactor")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("多线程Reactor（不指定线程数，默认就会按CPU的核数来配置线程数）")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("主从Reactor")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" bossGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventLoopGroup")]),t._v(" workerGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NioEventLoopGroup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);