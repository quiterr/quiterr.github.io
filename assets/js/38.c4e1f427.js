(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{347:function(a,s,t){"use strict";t.r(s);var e=t(0),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"webpack学习笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack学习笔记"}},[a._v("#")]),a._v(" webpack学习笔记")]),a._v(" "),t("p",[a._v("2019.3.24")]),a._v(" "),t("h2",{attrs:{id:"_1、环境搭建及demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、环境搭建及demo"}},[a._v("#")]),a._v(" 1、环境搭建及demo")]),a._v(" "),t("h3",{attrs:{id:"_1-1-环境搭建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-环境搭建"}},[a._v("#")]),a._v(" 1.1 环境搭建")]),a._v(" "),t("p",[a._v("由于之前学习过vue，实际已经用到了webpack，那么系统中究竟是否装过webpack呢？")]),a._v(" "),t("p",[a._v("查看是否全局安装过webpack")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm ls -g webpack\n")])])]),t("p",[a._v("没有安装过，技术胖的这套教程是针对webpack 3.6.0，这里安装对应版本")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install -g webpack@3.6.0\n")])])]),t("p",[a._v("安装有点慢，试试cnpm")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install cnpm -g --registry=https://registry.npm.taobao.org\ncnpm install -g webpack@3.6.0\n")])])]),t("p",[a._v("结果非常快。")]),a._v(" "),t("p",[a._v("这个命令可以查看所有的webpack版本")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm view webpack versions\n")])])]),t("p",[a._v("新建一个webpack文件夹，项目初始化")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm n init\n")])])]),t("p",[a._v("全局安装后，还要本地安装。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install -D webpack@3.6.0\n")])])]),t("p",[t("code",[a._v("-D")]),a._v("是"),t("code",[a._v("--save-dev")]),a._v("的简写")]),a._v(" "),t("p",[a._v("查看版本")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("webpack -v\n")])])]),t("p",[a._v("其实官方并不推荐全局安装，如果只是本地安装，就不能在命令行里运行webpack命令，需要配置下package.json")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('"scripts": {\n    "server": "webpack-dev-server",\n    "build":"webpack"\n  },\n')])])]),t("p",[a._v("然后就可以"),t("code",[a._v("npm run build")]),a._v("来打包了。")]),a._v(" "),t("h3",{attrs:{id:"_1-2-demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-demo"}},[a._v("#")]),a._v(" 1.2 demo")]),a._v(" "),t("p",[a._v("项目根目录下建src和dist两个文件夹")]),a._v(" "),t("p",[a._v("/dist/index.html")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token doctype"}},[a._v("<!DOCTYPE html>")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("html")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("lang")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("en"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("head")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("charset")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("UTF-8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("viewport"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("content")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("width=device-width, initial-scale=1.0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("http-equiv")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("X-UA-Compatible"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("content")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("ie=edge"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("jspang webpack"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("title")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("head")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("body")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("div")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("title"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("script")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("src")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("./bundle.js"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token script"}}),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("script")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("body")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("html")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("bundle.js文件现在还没有，用webpack执行打包命令后就会生成。")]),a._v(" "),t("p",[a._v("在src文件夹下建立entry.js")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getElementById")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'title'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("innerHTML"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Hello Webpack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("首次打包")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("webpack {entry file} {destination for bundled file}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("webpack src/entry.js dist/bundle.js\n")])])]),t("p",[a._v("进到dist目录，输出live-server命令就可以打开浏览器看到结果了。")]),a._v(" "),t("h2",{attrs:{id:"_2、配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、配置文件"}},[a._v("#")]),a._v(" 2、配置文件")]),a._v(" "),t("h3",{attrs:{id:"_2-1-入口和出口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-入口和出口"}},[a._v("#")]),a._v(" 2.1 入口和出口")]),a._v(" "),t("p",[t("strong",[a._v("配置文件webpack.config.js")])]),a._v(" "),t("p",[a._v("需要自己在项目根目录下手动建立webpack.config.js")]),a._v(" "),t("p",[a._v("没有内容的标准webpack配置模版")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//入口文件的配置项，支持是多入口")]),a._v("\n    entry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//出口文件的配置项，支持多出口")]),a._v("\n    output"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//模块：例如解读CSS,图片如何转换，压缩")]),a._v("\n    module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//插件，用于生产模版和各项功能")]),a._v("\n    plugins"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//配置webpack开发服务功能")]),a._v("\n    devServer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("entry选项（入口配置）")])]),a._v(" "),t("p",[a._v("这个选项就是配置我们要压缩的文件一般是JavaScript文件（当然也可以是CSS…..）。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//入口文件的配置项")]),a._v("\nentry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//里面的entery是可以随便写的")]),a._v("\n    entry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./src/entry.js'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),t("p",[t("strong",[a._v("output选项（出口配置）")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//出口文件的配置项")]),a._v("\noutput"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//打包的路径文职")]),a._v("\n    path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'dist'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//打包的文件名称")]),a._v("\n    filename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'bundle.js'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),t("p",[a._v("这里用到了node的代码，先用就行了。")]),a._v(" "),t("p",[a._v("如果只这样写，会报错：找不到path。所以我们要在webpack.config.js的头部引入path")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" path "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'path'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("strong",[a._v("打包")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("webpack\n")])])]),t("p",[a._v("这里报了一个错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('TypeError: "require" is not a function\n')])])]),t("p",[a._v("花了一些时间，发现是package.json中配置的webpack的版本号不对")]),a._v(" "),t("p",[a._v("原来是1.0.0，改成3.6.0并重新cnpm install就可以了。")]),a._v(" "),t("p",[t("strong",[a._v("多入口、多出口配置")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const path = require('path');\nmodule.exports={\n    //入口文件的配置项\n    entry:{\n        entry:'./src/entry.js',\n        //这里我们又引入了一个入口文件\n        entry2:'./src/entry2.js'\n    },\n    //出口文件的配置项\n    output:{\n        //输出的路径，用了Node语法\n        path:path.resolve(__dirname,'dist'),\n        //输出的文件名称\n        filename:'[name].js'\n    },\n    //模块：例如解读CSS,图片如何转换，压缩\n    module:{},\n    //插件，用于生产模版和各项功能\n    plugins:[],\n    //配置webpack开发服务功能\n    devServer:{}\n}\n")])])]),t("p",[a._v("entry配置项增加了一个entry2.js的入口文件，原来的bundle.js修改成了"),t("code",[a._v("[name].js")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"_2-2-服务和热更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-服务和热更新"}},[a._v("#")]),a._v(" 2.2 服务和热更新")]),a._v(" "),t("p",[t("strong",[a._v("设置webpack-dev-server")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev webpack-dev-server\n")])])]),t("p",[a._v("报错说要求webpack4.0以上版本")]),a._v(" "),t("p",[a._v("从https://www.npmjs.com/package/webpack-dev-server站点上可以查到相应的版本号")]),a._v(" "),t("p",[a._v("重新安装")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev webpack-dev-server@2.11.3\n")])])]),t("p",[a._v("报错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("peerDependencies WARNING webpack-dev-server@2.11.3 requires a peer of webpack@^2.2.0 || ^3.0.0 but none was installed\n")])])]),t("p",[a._v("需要在package.json文件中配置并重新执行cnpm install、重新安装webpack-dev-server")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('"devDependencies": {\n    "webpack": "3.6.0"\n  }\n')])])]),t("p",[a._v("之后在webpack.config.js中配置")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("devServer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//设置基本目录结构")]),a._v("\n        contentBase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'dist'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//服务器的IP地址，可以使用IP也可以使用localhost")]),a._v("\n        host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'localhost'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//服务端压缩是否开启")]),a._v("\n        compress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//配置服务端口号")]),a._v("\n        port"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1717")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("不能直接执行webpack-dev-server，因为我们只是本地安装，没有全局安装")]),a._v(" "),t("p",[a._v("在package.json里配置一下scripts选项")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"server"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"webpack-dev-server"')]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),t("p",[a._v("执行")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm run server\n")])])]),t("p",[a._v("如果前面那个"),t("code",[a._v("peerDependencies WARNING")]),a._v("这时又会报错")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Cannot find module 'webpack'\n")])])]),t("p",[a._v("所有的问题解决后，总算一切正常了。")]),a._v(" "),t("h2",{attrs:{id:"_3、模块：css文件打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、模块：css文件打包"}},[a._v("#")]),a._v(" 3、模块：CSS文件打包")]),a._v(" "),t("p",[a._v("Webpack在生产环境中有一个重要的作用就是减少http的请求数，就是把多个文件打包到一个js里，这样请求数就可以减少很多。这节学习CSS文件打包。先了解下webpack.config.js里的Loaders配置项。")]),a._v(" "),t("p",[t("strong",[a._v("Loaders")])]),a._v(" "),t("p",[a._v("Loaders是Webpack最重要的功能之一，他也是Webpack如此盛行的原因。")]),a._v(" "),t("p",[a._v("简单的举几个Loaders使用例子：")]),a._v(" "),t("ul",[t("li",[a._v("可以把SASS文件的写法转换成CSS，而不再使用其他转换工具。")]),a._v(" "),t("li",[a._v("可以把ES6或者ES7的代码，转换成大多浏览器兼容的JS代码。")]),a._v(" "),t("li",[a._v("可以把React中的JSX转换成JavaScript代码。")])]),a._v(" "),t("p",[a._v("注意：所有的Loaders都需要在npm中单独进行安装，并在webpack.config.js里进行配置。下面我们对Loaders的配置型简单梳理一下。")]),a._v(" "),t("ul",[t("li",[a._v("test：用于匹配处理文件的扩展名的表达式，这个选项是必须进行配置的；")]),a._v(" "),t("li",[a._v("use：loader名称，就是你要使用模块的名称，这个选项也必须进行配置，否则报错；")]),a._v(" "),t("li",[a._v("include/exclude:手动添加必须处理的文件（文件夹）或屏蔽不需要处理的文件（文件夹）（可选）；")]),a._v(" "),t("li",[a._v("query：为loaders提供额外的设置选项（可选）。")])]),a._v(" "),t("p",[a._v("下面进入正题，如何打包CSS文件。")]),a._v(" "),t("p",[t("strong",[a._v("打包CSS文件：")])]),a._v(" "),t("p",[a._v("在/src目录下，建立一个css文件夹，在文件夹里建立index.css文件。")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("body")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("background-color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" red"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" white"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("引入到entry.js中")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("import css from './css/index.css';\n")])])]),t("p",[t("strong",[a._v("style-loader:")])]),a._v(" "),t("p",[a._v("它是用来处理css文件中的url()等，"),t("a",{attrs:{href:"https://www.npmjs.com/package/css-loader",target:"_blank",rel:"noopener noreferrer"}},[a._v("style-loader介绍"),t("OutboundLink")],1)]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev style-loader\n")])])]),t("p",[t("strong",[a._v("css-loader：")])]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.npmjs.com/package/css-loader",target:"_blank",rel:"noopener noreferrer"}},[a._v("css-loader"),t("OutboundLink")],1),a._v(" 把"),t("code",[a._v("@import")]),a._v(" 和"),t("code",[a._v("url()")]),a._v(" 解释成 "),t("code",[a._v("import/require()")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev css-loader\n")])])]),t("p",[a._v("安装时出现")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("peerDependencies WARNING css-loader@* requires a peer of webpack@^4.0.0 but webpack@3.6.0 was installed\n")])])]),t("p",[a._v("重新安装老版本")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install -D css-loader@0.28.0\n")])])]),t("p",[t("strong",[a._v("loaders配置：")])]),a._v(" "),t("p",[a._v("修改webpack.config.js中module属性中的配置代码")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("module:{\n        rules: [\n            {\n              test: /\\.css$/,\n              use: [ 'style-loader', 'css-loader' ]\n            }\n          ]\n    },\n")])])]),t("p",[a._v("第二种写法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("module:{\n        rules:[\n            {\n                test:/\\.css$/,\n                loader:['style-loader','css-loader']\n            }\n        ]\n    },\n")])])]),t("p",[a._v("第三种写法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('module:{\n        rules:[\n            {\n                test:/\\.css$/,\n                use: [\n                    {\n                        loader: "style-loader"\n                    }, {\n                        loader: "css-loader"\n                    }\n                ]\n            }\n        ]\n    },\n')])])]),t("h2",{attrs:{id:"_4、插件配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、插件配置"}},[a._v("#")]),a._v(" 4、插件配置")]),a._v(" "),t("h3",{attrs:{id:"_4-1-配置js压缩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-配置js压缩"}},[a._v("#")]),a._v(" 4.1 配置JS压缩")]),a._v(" "),t("p",[a._v("webpack默认集成了uglifyjs-webpack-plugin，负责js文件的压缩。")]),a._v(" "),t("p",[a._v("在webpack.config.js中引入uglifyjs-webpack-glugin")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const uglify = require('uglifyjs-webpack-plugin');\n")])])]),t("p",[a._v("在plugins配置里new一个 uglify对象就可以了")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("plugins:[\n        new uglify()\n    ],\n")])])]),t("p",[a._v("使用webpack命令打包就会发现生成的js已经压缩了。")]),a._v(" "),t("h3",{attrs:{id:"_4-2-html文件的发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-html文件的发布"}},[a._v("#")]),a._v(" 4.2 HTML文件的发布")]),a._v(" "),t("p",[a._v("有经验的小伙伴其实一眼就可以看出，我们把index.html直接放到了dist文件夹下是不正确的，应该放到src目录下，前面只是为了方便学习。")]),a._v(" "),t("p",[t("strong",[a._v("devServer和JS压缩的冲突")])]),a._v(" "),t("p",[a._v("devServer用于开发环境，JS压缩用于生产环境，一般在正式开发时都有多个webpack配置文件。")]),a._v(" "),t("p",[t("strong",[a._v("打包HTML文件")])]),a._v(" "),t("p",[a._v("先把dist中的html文件剪切到src目录中，并去掉我们的JS引入代码（webpack会自动为我们引入JS），因为这才是我们真实工作的目录文件结构。")]),a._v(" "),t("p",[a._v("配置webpack.config.js文件，先引入我们的html-webpack-plugin插件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const htmlPlugin= require('html-webpack-plugin');\n")])])]),t("p",[a._v("使用npm进行安装")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev html-webpack-plugin\n")])])]),t("p",[a._v("最后在webpack.config.js里的plugins里进行插件配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new htmlPlugin({\n            minify:{\n                removeAttributeQuotes:true\n            },\n            hash:true,\n            template:'./src/index.html'\n        })\n")])])]),t("ul",[t("li",[a._v("minify：是对html文件进行压缩，removeAttrubuteQuotes是却掉属性的双引号。")]),a._v(" "),t("li",[a._v("hash：开发中js有缓存效果，所以加入hash，这样可以有效避免缓存JS。")]),a._v(" "),t("li",[a._v("template：是要打包的html模版路径和文件名称。")])]),a._v(" "),t("p",[a._v("在终端中使用webpack进行打包。正常的话可以看到index.html文件已经被打包到dist目录下了，并且自动为我们引入了路口的JS文件。")]),a._v(" "),t("h2",{attrs:{id:"_5、图片迈坑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、图片迈坑"}},[a._v("#")]),a._v(" 5、图片迈坑")]),a._v(" "),t("h3",{attrs:{id:"_5-1-css中的图片处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-css中的图片处理"}},[a._v("#")]),a._v(" 5.1 CSS中的图片处理")]),a._v(" "),t("p",[a._v("有时是在开发环境中可以找到图片，但是一打包后就找不到图片了，另一种情况是压根不知道如何正确引入图片。")]),a._v(" "),t("p",[t("strong",[a._v("图片写入CSS")])]),a._v(" "),t("p",[a._v("在src目录下新建一个images文件夹，把图片放入images文件夹。")]),a._v(" "),t("p",[a._v("在\\src\\index.html文件中增加一个放置div的标签")]),a._v(" "),t("div",{staticClass:"language-html extra-class"},[t("pre",{pre:!0,attrs:{class:"language-html"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("div")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("tupian"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),t("p",[a._v("编写css文件，把图片作为背景显示。")]),a._v(" "),t("div",{staticClass:"language-css extra-class"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("#tupian")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("background-image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token url"}},[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("../images/hello.png"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("466px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("453px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("file-loader、url-loader")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev file-loader@2.0.0\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev url-loader@0.5.9\n")])])]),t("p",[a._v("**file-loader：**解决引用路径的问题，拿background样式用url引入背景图来说，我们都知道，webpack最终会将各个模块打包成一个文件，因此我们样式中的url路径是相对入口html页面的，而不是相对于原始css文件所在的路径的。这就会导致图片引入失败。这个问题是用file-loader解决的，file-loader可以解析项目中的url引入（不仅限于css），根据我们的配置，将图片拷贝到相应的路径，再根据我们的配置，修改打包后文件引用路径，使之指向正确的文件。")]),a._v(" "),t("p",[a._v("**url-loader：**如果图片较多，会发很多http请求，会降低页面性能。这个问题可以通过url-loader解决。url-loader会将引入的图片编码，生成dataURl。相当于把图片数据翻译成一串字符。再把这串字符打包到文件中，最终只需要引入这个文件就能访问图片了。当然，如果图片较大，编码会消耗性能。因此url-loader提供了一个limit参数，小于limit字节的文件会被转为DataURl，大于limit的还会使用file-loader进行copy。")]),a._v(" "),t("p",[t("strong",[a._v("配置url-loader")])]),a._v(" "),t("p",[a._v("webpack.config.js文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//模块：例如解读CSS,图片如何转换，压缩\n    module:{\n        rules: [\n            {\n              test: /\\.css$/,\n              use: [ 'style-loader', 'css-loader' ]\n            },{\n               test:/\\.(png|jpg|gif)/ ,\n               use:[{\n                   loader:'url-loader',\n                   options:{\n                       limit:500000\n                   }\n               }]\n            }\n          ]\n    },\n")])])]),t("p",[t("strong",[a._v("为什么只使用了url-loader")])]),a._v(" "),t("p",[a._v("简答地说，url-loader封装了file-loader。url-loader不依赖于file-loader，即使用url-loader时，只需要安装url-loader即可，不需要安装file-loader，因为url-loader内置了file-loader。通过上面的介绍，我们可以看到，url-loader工作分两种情况：")]),a._v(" "),t("p",[a._v("1.文件大小小于limit参数，url-loader将会把文件转为DataURL（Base64格式）；")]),a._v(" "),t("p",[a._v("2.文件大小大于limit，url-loader会调用file-loader进行处理，参数也会直接传给file-loader。")]),a._v(" "),t("p",[a._v("也就是说，其实我们只安装一个url-loader就可以了。但是为了以后的操作方便，我们这里就顺便安装上file-loader。")]),a._v(" "),t("p",[t("strong",[a._v("把图片放到指定的文件夹下")])]),a._v(" "),t("p",[a._v("例如放到images文件夹下，只需要配置url-loader选项就可以了。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("use: [{\n\tloader: 'url-loader',\n\toptions: {\n\t\tlimit: 500000,\n\t\toutputPath:'images/'\n\t}\n}]\n")])])]),t("h3",{attrs:{id:"_5-2-css分离与图片路径处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-css分离与图片路径处理"}},[a._v("#")]),a._v(" 5.2 CSS分离与图片路径处理")]),a._v(" "),t("p",[a._v("这节两个主要知识：第一个是把CSS从JavasScript代码中分离出来，第二个是如何处理分离出来后CSS中的图片路径不对问题。")]),a._v(" "),t("p",[t("strong",[a._v("CSS分离:extract-text-webpack-plugin")])]),a._v(" "),t("p",[a._v("有些简单的交互页面中，你的JavasScript页面代码会非常少，而大部分代码都在CSS中，这时候项目组长会要求把CSS单独提取出来，方便以后更改。")]),a._v(" "),t("p",[a._v("webpack官方建议CSS打包到JavasScript当中以减少http的请求数。但现实中的需求往往不是我们前端能控制的，分离CSS就是这样一个既合理由不合理的需求。")]),a._v(" "),t("p",[a._v("安装")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev extract-text-webpack-plugin@3.0.0\n")])])]),t("p",[a._v("引入")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('const extractTextPlugin = require("extract-text-webpack-plugin");\n')])])]),t("p",[a._v("设置Plugins")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('new extractTextPlugin("/css/index.css")\n')])])]),t("p",[a._v("这里的/css/index.css是分离后的路径位置。还要修改原来的style-loader和css-loader。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        rules"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n              test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/\\.css$/")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n              use"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" extractTextPlugin"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("extract")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                fallback"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"style-loader"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                use"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"css-loader"')]),a._v("\n              "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n               test"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/\\.(png|jpg|gif)/")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n               use"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                   loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'url-loader'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n                   options"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                       limit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("500000")]),a._v("\n                   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n")])])]),t("p",[a._v("最后就是webpack打包了。")]),a._v(" "),t("p",[t("strong",[a._v("图片路径问题：")])]),a._v(" "),t("p",[a._v("上边已经成功将css分离出来了，但是图片并没有显示出来，这是因为路径有问题，需要配置下publicPath。")]),a._v(" "),t("p",[a._v("publicPath在webpack.config.js文件的output选项中，主要作用就是处理静态文件路径。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//出口文件的配置项\n    output:{\n        //输出的路径，用了Node语法\n        path:path.resolve(__dirname,'dist'),\n        //输出的文件名称\n        filename:'[name].js',\n        publicPath:\"http://localhost:1717/\"\n    },\n")])])]),t("p",[a._v("注意这里的IP和端口，保持和devServer或live-server一致。")]),a._v(" "),t("h3",{attrs:{id:"_5-3-处理html中的图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-处理html中的图片"}},[a._v("#")]),a._v(" 5.3 处理HTML中的图片")]),a._v(" "),t("p",[a._v("webpack不建议用标签来引入图片，但是我们作前端的人特别热衷于这种写法，国人也为此开发了一个：html-withimg-loader，这是一个小众插件。")]),a._v(" "),t("p",[a._v("安装")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev html-withimg-loader@0.1.16\n")])])]),t("p",[a._v("注意：有时候输错版本号，cnpm没反应？比如0.1.16输错成0.1.6，npm没有这问题。另外，有时候uninstall一些模块的时候会把别的需要的模块也uninstall了，只需要npm install一下就好了。")]),a._v(" "),t("p",[a._v("在/src/index.html下用img标签引入图片")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<body>\n    <div id="title"></div>\n    <div id="tupian"></div>\n    <div><img src="./images/hello.png"  alt="厦门长隆旅游" /></div>\n</body>\n')])])]),t("p",[a._v("修改webpack.config.js")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("{\n    test: /\\.(htm|html)$/i,\n    use:[ 'html-withimg-loader'] \n}\n")])])]),t("p",[a._v("最后就是打包了。")]),a._v(" "),t("h2",{attrs:{id:"_6、css进阶"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、css进阶"}},[a._v("#")]),a._v(" 6、CSS进阶")]),a._v(" "),t("h3",{attrs:{id:"_6-1-less文件的打包和分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-less文件的打包和分离"}},[a._v("#")]),a._v(" 6.1 Less文件的打包和分离")]),a._v(" "),t("p",[t("strong",[a._v("安装less")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev less\n")])])]),t("p",[t("strong",[a._v("index.html中加一个div")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="gogo"></div>\n')])])]),t("p",[t("strong",[a._v("编写一个less文件")])]),a._v(" "),t("div",{staticClass:"language-less extra-class"},[t("pre",{pre:!0,attrs:{class:"language-less"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@base "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")])]),a._v("#000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("#gogo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("300px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("300px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("background-color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("@base")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("引入到entery.js文件中")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("import")]),a._v(" less "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("from")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'./css/black.less'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[t("strong",[a._v("安装配置loader")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev less-loader\n")])])]),t("p",[a._v("安装好后，需要在webpack.config.js里编写loader配置，当然要想正确解析成CSS，还是需要style-loader和css-loader的帮助。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n\ttest: /\\.less$/,\n\tuse: [{\n\t\tloader: "style-loader" // creates style nodes from JS strings\n\t}, {\n\t\tloader: "css-loader" // translates CSS into CommonJS\n\t}, {\n\t\tloader: "less-loader" // compiles Less to CSS\n\t}]\n}\n')])])]),t("p",[t("strong",[a._v("打包")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm run build\n")])])]),t("p",[t("strong",[a._v("把Lees文件分离。")])]),a._v(" "),t("p",[a._v("仍然是用extract-text-webpack-plugin这个插件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n\ttest: /\\.less$/,\n\tuse: extractTextPlugin.extract({\n\t\tuse: [{\n\t\t\tloader: "css-loader"\n\t\t}, {\n\t\t\tloader: "less-loader"\n\t\t}],\n\t\t// use style-loader in development\n\t\tfallback: "style-loader"\n\t})\n}\n')])])]),t("p",[a._v("如果不改原来的插件配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('new extractTextPlugin("/css/index.css")\n')])])]),t("p",[a._v("那么所有的css、less文件都会打包到一个index.css中。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/q/1010000011058648/a-1020000011058890",target:"_blank",rel:"noopener noreferrer"}},[a._v("多个css文件"),t("OutboundLink")],1),a._v(" 这篇文章给了一个办法。")]),a._v(" "),t("h3",{attrs:{id:"_6-2-sass文件的打包和分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-sass文件的打包和分离"}},[a._v("#")]),a._v(" 6.2 SASS文件的打包和分离")]),a._v(" "),t("p",[t("strong",[a._v("编写一个Sass文件")])]),a._v(" "),t("div",{staticClass:"language-scss extra-class"},[t("pre",{pre:!0,attrs:{class:"language-scss"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$nav-color")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" #FFF"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token selector"}},[a._v("#nav ")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$width")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 100%"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$width")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("height")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("30px"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("background-color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$nav-color")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[t("strong",[a._v("安装SASS打包的loader")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev node-sass\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev sass-loader\n")])])]),t("p",[t("strong",[a._v("编写loader配置")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n                test: /\\.scss$/,\n                use: [{\n                    loader: "style-loader" // creates style nodes from JS strings\n                }, {\n                    loader: "css-loader" // translates CSS into CommonJS\n                }, {\n                    loader: "sass-loader" // compiles Sass to CSS\n                }]\n}\n')])])]),t("p",[a._v("打包以及分离和less一样，这里不再重复了。")]),a._v(" "),t("h3",{attrs:{id:"_6-3-自动处理css3属性前缀"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-自动处理css3属性前缀"}},[a._v("#")]),a._v(" 6.3 自动处理CSS3属性前缀")]),a._v(" "),t("p",[a._v("虽然在"),t("code",[a._v("can i use")]),a._v("网上上可以查到哪些CSS属性该加浏览器前缀，但是这样效率太低。这节介绍用"),t("code",[a._v("postcss-loader")]),a._v("自动加前缀。")]),a._v(" "),t("p",[t("strong",[a._v("安装postcss")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev postcss-loader autoprefixer\n")])])]),t("p",[t("strong",[a._v("配置")])]),a._v(" "),t("p",[a._v("在项目根目录建立一个postcss.config.js文件。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("module.exports = {\n    plugins: [\n        require('autoprefixer')\n    ]\n}\n")])])]),t("p",[t("strong",[a._v("编写loader")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n      test: /\\.css$/,\n      use: [\n            {\n              loader: "style-loader"\n            }, {\n              loader: "css-loader",\n              options: {\n                 modules: true\n              }\n            }, {\n              loader: "postcss-loader"\n            }\n      ]\n}\n')])])]),t("p",[t("strong",[a._v("分离css")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n\ttest: /\\.css$/,\n\tuse: extractTextPlugin.extract({\n\t\tfallback: "style-loader",\n\t\tuse: ["css-loader", "postcss-loader"]\n\t})\n}\n')])])]),t("p",[t("a",{attrs:{href:"https://github.com/postcss/postcss-loader",target:"_blank",rel:"noopener noreferrer"}},[a._v("postcss-loader官网"),t("OutboundLink")],1)]),a._v(" "),t("h3",{attrs:{id:"_6-4-消除未使用的css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-消除未使用的css"}},[a._v("#")]),a._v(" 6.4 消除未使用的CSS")]),a._v(" "),t("p",[a._v("像Bootstrap这样的框架往往会带有很多CSS。在项目中通常我们只使用它的一小部分。就算我们自己写CSS，随着项目的进展，CSS也会越来越多，有时候需求更改，带来了DOM结构的更改，这时候我们可能无暇关注CSS样式，造成很多CSS的冗余。这节学习用webpack消除未使用的CSS。")]),a._v(" "),t("p",[t("strong",[a._v("安装PurifyCSS-webpack")])]),a._v(" "),t("p",[a._v("这是一个插件，而不是loader，所以这个需要安装还需要引入。")]),a._v(" "),t("p",[a._v("PurifyCSS-webpack依赖于purify-css。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm  i -D purifycss-webpack purify-css\n")])])]),t("p",[t("strong",[a._v("引入glob")])]),a._v(" "),t("p",[a._v("因为我们需要同步检查html模板，所以我们需要引入node的glob对象使用。在webpack.config.js文件头部引入glob。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const glob = require('glob');\nconst PurifyCSSPlugin = require(\"purifycss-webpack\");\n")])])]),t("p",[t("strong",[a._v("配置plugins")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new PurifyCSSPlugin({\n\t// Give paths to parse for rules. These should be absolute!\n\tpaths: glob.sync(path.join(__dirname, 'src/*.html')),\n})\n")])])]),t("p",[a._v("**注意：**使用这个插件必须配合extract-text-webpack-plugin这个插件")]),a._v(" "),t("h2",{attrs:{id:"_7、-给webpack增加babel支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、-给webpack增加babel支持"}},[a._v("#")]),a._v(" 7、 给webpack增加babel支持")]),a._v(" "),t("p",[t("strong",[a._v("Babel的安装与配置")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev @babel/core babel-loader @babel/preset-env @babel/preset-react\n")])])]),t("p",[t("strong",[a._v("在webpack中配置Babel")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n    test:/\\.(jsx|js)$/,\n    use:{\n        loader:\'babel-loader\',\n        options:{\n            presets:[\n                "@babel/preset-env", "@babel/preset-react"\n            ]\n        }\n    },\n    exclude:/node_modules/\n}\n')])])]),t("p",[a._v("修改一下entry.js试试")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("import css from './css/index.css';\n{\n    let jspangString = 'Hello Webpack'\n    document.getElementById('title').innerHTML=jspangString; \n}\n")])])]),t("p",[t("strong",[a._v(".babelrc配置")])]),a._v(" "),t("p",[a._v("Babel的配置非常多，最好单独写在自己的配置文件中。")]),a._v(" "),t("p",[a._v(".babelrc")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('presets: [\n\t"@babel/preset-env", "@babel/preset-react"\n]\n')])])]),t("p",[a._v(".webpack.config.js你的babel loader的options就可以不要了。")]),a._v(" "),t("h2",{attrs:{id:"_8、打包后如何调试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、打包后如何调试"}},[a._v("#")]),a._v(" 8、打包后如何调试")]),a._v(" "),t("p",[a._v("在使用webpack时通过配置devtool，webapck就会自动生成source maps 文件，map文件是一种对应编译文件和源文件的方法，让我们调试起来更简单。")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("module"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  devtool"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'eval-source-map'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  entry"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("  __dirname "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/app/main.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  output"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" __dirname "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/public"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n    filename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bundle.js"')]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("ul",[t("li",[t("p",[t("strong",[a._v("source-map：")])]),a._v(" "),t("p",[a._v("在一个单独文件中产生一个完整且功能完全的文件。这个文件具有最好的source map，但是它会减慢打包速度；")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("cheap-module-source-map：")])]),a._v(" "),t("p",[a._v("在一个单独的文件中产生一个不带列映射的map，不带列映射提高了打包速度，但是也使得浏览器开发者工具只能对应到具体的行，不能对应到具体的列（符号），会对调试造成不便。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("eval-source-map：")])]),a._v(" "),t("p",[a._v("使用eval打包源文件模块，在同一个文件中生成干净的完整版source map，但是对打包后输出的JS文件的执行具有性能和安全的隐患。在开发阶段这是一个非常好的选项，在生产阶段则一定要不开启这个选项。")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("cheap-module-eval-source-map：")])]),a._v(" "),t("p",[a._v("这是在打包文件时最快的生成source map的方法，生成 Source map 会和打包后的JavaScript文件同行显示，没有影射列，和eval-source-map选项具有相似的缺点。")])])]),a._v(" "),t("p",[a._v("四种打包模式，从上到下打包速度越来越快，不过同时也具有越来越多的负面作用，较快的打包速度的后果就是对执行和调试有一定的影响。")]),a._v(" "),t("p",[a._v("个人意见是，如果大型项目可以使用source-map，如果是中小型项目使用eval-source-map就完全可以应对，需要强调说明的是，source map只适用于开发阶段，上线前记得修改这些调试设置。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.cnblogs.com/axl234/p/6500534.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考文档"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"_9、实战技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、实战技巧"}},[a._v("#")]),a._v(" 9、实战技巧")]),a._v(" "),t("h3",{attrs:{id:"_9-1-开发和生产并行设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-开发和生产并行设置"}},[a._v("#")]),a._v(" 9.1 开发和生产并行设置")]),a._v(" "),t("p",[t("strong",[a._v("npm安装的三种方式")])]),a._v(" "),t("p",[t("strong",[a._v("第一种：")])]),a._v(" "),t("div",{staticClass:"language-mipsasm extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install jquery\n")])])]),t("p",[a._v("安装完成后，你会发现在package.json中并不存在这个包的依赖。如果你项目拷贝给别人继续开发，或者别人和你git合作，再次下载项目npm install时就会缺少这个jquery包。项目就会无法正常运行，所以这也是我们最不赞成的安装方法。")]),a._v(" "),t("p",[t("strong",[a._v("第二种：")])]),a._v(" "),t("div",{staticClass:"language-mipsasm extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install jquery --save\n")])])]),t("p",[a._v("安装完成后，它存在于package.json的dependencies中，也就是说它是生产环境需要依赖的包（上线时需要的以来包）。")]),a._v(" "),t("p",[t("strong",[a._v("第三种：")])]),a._v(" "),t("div",{staticClass:"language-mipsasm extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("npm install jquery --save-dev\n")])])]),t("p",[a._v("安装完成后，它存在于package.json的devDependencies中，也就是说它是开发环境中需要的，上线并不需要这个包的依赖。")]),a._v(" "),t("p",[t("strong",[a._v("安装全部项目依赖包：")])]),a._v(" "),t("div",{staticClass:"language-cmake extra-class"},[t("pre",{pre:!0,attrs:{class:"language-cmake"}},[t("code",[a._v("npm install\n")])])]),t("p",[a._v("安装生产环境依赖包：")]),a._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[a._v("npm install "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("--production")]),a._v("\n")])])]),t("p",[t("strong",[a._v("配置生产和开发并行")])]),a._v(" "),t("p",[a._v("修改package.json")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('"scripts": {\n    "server": "webpack-dev-server --open",\n    "dev":"set type=dev&webpack",\n    "build": "set type=build&webpack"\n  },\n')])])]),t("p",[a._v("修改webpack.config.js文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('if(process.env.type== "build"){\n    var website={\n        publicPath:"http://192.168.0.104:1717/"\n    }\n}else{\n    var website={\n        publicPath:"http://cdn.jspang.com/"\n    }\n}\n')])])]),t("h3",{attrs:{id:"_9-2-webpack模块化配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-webpack模块化配置"}},[a._v("#")]),a._v(" 9.2 webpack模块化配置")]),a._v(" "),t("p",[a._v("在根目录，新建一个webpack_config文件夹，然后新建entry_webpack.js文件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//声明entry变量\nconst entry ={};  \n//声明路径属性\nentry.path={\n    entry:'./src/entry.js'  \n}\n//进行模块化\nmodule.exports =entry;\n")])])]),t("p",[a._v("在webpack.config.js中引入")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('const entry = require("./webpack_config/entry_webpack.js")\n')])])]),t("p",[a._v("然后在入口文件部分，修改成如下代码：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("entry:entry.path,\n")])])]),t("p",[a._v("注意，按照这个做实际报错了，了解思路就行了。")]),a._v(" "),t("h3",{attrs:{id:"_9-3-优雅打包第三方类库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-优雅打包第三方类库"}},[a._v("#")]),a._v(" 9.3 优雅打包第三方类库")]),a._v(" "),t("p",[a._v("以JQuery为例")]),a._v(" "),t("p",[a._v("安装JQuery")]),a._v(" "),t("div",{staticClass:"language-mipsasm extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save jquery\n")])])]),t("p",[a._v("引入到entry.js")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("import $ from 'jquery';\n")])])]),t("p",[a._v("使用jquery")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$('#title').html('Hello JSpang');\n")])])]),t("p",[a._v("不仅可以在entry.js中进行引入，还可以在任何需要的js中引入，webpack不会重复打包，它只打包一次。")]),a._v(" "),t("p",[t("strong",[a._v("用plugin引入")])]),a._v(" "),t("p",[a._v("使用webpack自带的插件ProvidePlugin")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const  webpack = require('webpack');\n")])])]),t("p",[a._v("配置plugins模块")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('plugins:[\n    new webpack.ProvidePlugin({\n        $:"jquery"\n    })\n],\n')])])]),t("h3",{attrs:{id:"_9-4-watch的正确使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-4-watch的正确使用方法"}},[a._v("#")]),a._v(" 9.4 watch的正确使用方法")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("watchOptions:{\n    //检测修改的时间，以毫秒为单位\n    poll:1000, \n    //防止重复保存而发生重复编译错误。这里设置的500是半秒内重复保存，不进行打包操作\n    aggregateTimeout:500, \n    //不监听的目录\n    ignored:/node_modules/, \n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("webpack --watch\n")])])]),t("p",[t("strong",[a._v("BannerPlugin插件")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new webpack.BannerPlugin('JSPang版权所有，看官方免费视频到jspang.com收看')\n")])])]),t("p",[a._v("需要注意的是在使用这个插件之前必须引入webpack。")]),a._v(" "),t("h3",{attrs:{id:"_9-5-webpack优化黑技能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-5-webpack优化黑技能"}},[a._v("#")]),a._v(" 9.5 webpack优化黑技能")]),a._v(" "),t("p",[t("strong",[a._v("ProvidePlugin和import")])]),a._v(" "),t("p",[a._v("之前学习了如何引入第三方类库，并引入了jquery，在引用JQuery时我们用了两种方法，第一种时import，第二种时使用ProvidePlugin插件。两种引入方法区别")]),a._v(" "),t("ul",[t("li",[a._v("import引入方法：引用后不管你在代码中是否该类库，都会把该类库打包起来，这样有时就会让代码产生冗余。")]),a._v(" "),t("li",[a._v("ProvidePlugin引入方法：引用后只有在类库使用时，才按需进行打包，所以建议在工作使用插件的方式进行引入。")])]),a._v(" "),t("p",[t("strong",[a._v("抽离JQuery")])]),a._v(" "),t("p",[a._v("上边的方法只是优化的第一步，工作中不用的类库我们也不会引入。")]),a._v(" "),t("p",[a._v("第一步：修改入口文件")]),a._v(" "),t("p",[a._v("webpack.config.js")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("entry:{\n        entry:'./src/entry.js',\n        jquery:'jquery'\n },\n")])])]),t("p",[a._v("第二步：引入optimize插件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new webpack.optimize.CommonsChunkPlugin({\n    //name对应入口文件中的名字，我们起的是jQuery\n    name:'jquery',\n    //把文件打包到哪里，是一个路径\n    filename:\"assets/js/jquery.min.js\",\n    //最小打包的文件模块数，这里直接写2就好\n    minChunks:2\n}),\n")])])]),t("p",[a._v("filename是可以省略的，默认直接打包到根目录dist下。")]),a._v(" "),t("p",[a._v("配置完成后，先删掉以前打包的dist目录，然后用webpack再次打包，会发现jquery被抽离了出来，并且entry.js文件变的很小。")]),a._v(" "),t("p",[t("strong",[a._v("多个第三方类库抽离")])]),a._v(" "),t("p",[a._v("在实际开发中，引用不止一个第三方类库，以引入Vue为例，看看如何抽离出来。")]),a._v(" "),t("p",[a._v("先安装vue")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install vue --save\n")])])]),t("p",[a._v("在入口配置中引入vue和jquery")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("entry:{\n    entry:'./src/entry.js',\n    jquery:'jquery',\n    vue:'vue'\n},\n")])])]),t("p",[a._v("修改CommonsChunkPlugin配置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new webpack.optimize.CommonsChunkPlugin({\n    //name对应入口文件中的名字，我们起的是jQuery\n    name:['jquery','vue'],\n    //把文件打包到哪里，是一个路径\n    filename:\"assets/js/[name].js\",\n    //最小打包的文件模块数，这里直接写2就好\n    minChunks:2\n}),\n")])])]),t("h3",{attrs:{id:"_9-6-静态资源集中输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-6-静态资源集中输出"}},[a._v("#")]),a._v(" 9.6 静态资源集中输出")]),a._v(" "),t("p",[a._v("项目根目录下新建public文件夹，放入一张图片。")]),a._v(" "),t("p",[a._v("安装copy-webpack-plugin插件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("cnpm install --save-dev copy-webpack-plugin@4.0.1\n")])])]),t("p",[a._v("在webpack.config.js文件的头部引入插件")]),a._v(" "),t("div",{staticClass:"language-ebnf extra-class"},[t("pre",{pre:!0,attrs:{class:"language-ebnf"}},[t("code",[t("span",{pre:!0,attrs:{class:"token definition rule keyword"}},[a._v("const copyWebpackPlugin")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token rule"}},[a._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"copy-webpack-plugin"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("在plugins里边配置插件")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new copyWebpackPlugin([{\n        from:__dirname+'/src/public',\n        to:'./public'\n    }])\n")])])]),t("ul",[t("li",[a._v("from:要打包的静态资源目录地址，这里的__dirname是指项目目录下，是node的一种语法，可以直接定位到本机的项目目录中。")]),a._v(" "),t("li",[a._v("to:要打包到的文件夹路径，跟随output配置中的目录。所以不需要再自己加__dirname。")])]),a._v(" "),t("h3",{attrs:{id:"_9-7-json配置文件使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-7-json配置文件使用"}},[a._v("#")]),a._v(" 9.7 JSON配置文件使用")]),a._v(" "),t("p",[a._v("项目中经常用到JSON配置文件，在webpack1或者webpack2版本中，需要加载json-loader，但是在webpack3.x版本中，不再需要另外引入了。")]),a._v(" "),t("p",[a._v("项目根目录下新建config.json")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('{\n    "name":"hello"\n}\n')])])]),t("p",[a._v("index.html")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<div id="json"></div>\n')])])]),t("p",[a._v("entry.js")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var json =require('../config.json');\ndocument.getElementById(\"json\").innerHTML= json.name;\n")])])]),t("p",[a._v("打包即可看到效果。")]),a._v(" "),t("p",[t("strong",[a._v("热更新")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("new webpack.HotModuleReplacementPlugin()\n")])])]),t("p",[a._v("这里的更新是重新刷新了页面，而不是Vue的局部刷新。")])])}),[],!1,null,null,null);s.default=n.exports}}]);